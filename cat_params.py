import numpy as np
from fxpmath import Fxp

k1_cat = 135 # Size of E (output of Bit Manipulation)
m1_cat = 33  
m2_cat = 38

float_temp0 = Fxp(0.2255, False, m1_cat, m1_cat - 1) # Create temp variable to reduce execution time
float_temp1 = Fxp(0.3377, False, m1_cat, m1_cat - 1) # Create temp variable to reduce execution time
IV0_Cat = np.array([
                    [float_temp0],
                    [float_temp1]
                   ], dtype = Fxp)

float_temp0 = Fxp(33.1133, False, m2_cat, m2_cat - 6) # Create temp variable to reduce execution time
float_temp1 = Fxp(17.1133, False, m2_cat, m2_cat - 6) # Create temp variable to reduce execution time
Gamma0_Cat = np.array([
                       [float_temp0],
                       [float_temp1]
                      ], dtype = Fxp)


#===========================================================================================================
#                                       Paramsters for 256x256 images
#===========================================================================================================

# Yp_256x256_Cats: Used to rearrange bit of X_R to find X_new and Y_new
Yp_256x256_Cat = [
                  np.array([[2 , 2 , 2, 1 , 1 , 2, 1 , 2 , 2 , 2 , 2 , 1 , 2 , 1 , 1 , 1 ],   # -> Size of one row equals to 2*log2(M)
                            [19, 30, 3, 22, 14, 6, 11, 22, 31, 16, 20, 30, 22, 19, 18, 21]]), # k = 1
                  
                  np.array([[2, 1 , 2 , 1 , 1, 2 , 1 , 1 , 1, 2 , 1, 1 , 2 , 2 , 1 , 1],
                            [4, 19, 23, 31, 5, 15, 13, 30, 8, 14, 3, 11, 30, 21, 14, 7]]) , # k = 2
                  
                  np.array([[2 , 1 , 2, 1, 2, 2 , 1 , 2 , 2, 1 , 1, 2 , 1 , 2 , 2 , 1 ],
                            [28, 27, 9, 4, 5, 20, 24, 31, 8, 26, 6, 21, 24, 20, 19, 21]]), # k = 3
                  
                  np.array([[2, 2 , 2 , 1 , 1 , 1 , 2 , 2 , 2 , 1, 1 , 2, 1 , 1 , 1 , 2],
                            [4, 11, 25, 32, 17, 10, 13, 26, 24, 3, 30, 2, 15, 28, 12, 6]]), # k = 4

                  np.array([[1 , 1 , 2, 2 , 1, 1, 2, 1, 2 , 2 , 2 , 1 , 2 , 1, 1 , 1 ],
                            [21, 26, 2, 32, 6, 8, 8, 3, 10, 18, 24, 20, 32, 4, 10, 24]]), # k = 5
                  
                  np.array([[1 , 1 , 1, 1 , 2 , 1 , 2 , 1, 1, 1 , 1, 1 , 2, 1 , 2 , 1 ],
                            [20, 23, 9, 18, 14, 28, 27, 7, 2, 21, 9, 16, 5, 10, 10, 25]]), # k = 6
                  
                  np.array([[2 , 1 , 2 , 2 , 1, 2 , 1 , 1 , 1 , 2 , 1, 1 , 2 , 1 , 1 , 1 ],
                            [21, 25, 29, 10, 2, 16, 12, 28, 15, 26, 8, 29, 18, 23, 18, 31]]), # k = 7

                  np.array([[1 , 1 , 2 , 2 , 2 , 1 , 2 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 1 , 1 ],
                            [16, 15, 12, 7 , 18, 29, 17, 31, 15, 22, 25, 25, 24, 15, 25, 14]])  # k = 8
                  ]

# Y_inter_images_p8_Cat: Used to rearrange bits of X_R to find K_new
Y_inter_images_p8_Cat = [
                         np.array([[1, 2 , 1],
                                   [2, 27, 9]]), # k = 1
                         
                         np.array([[1 , 1, 2 ],
                                   [18, 6, 27]]), # k = 2

                         np.array([[2 , 2, 1 ],
                                   [19, 4, 2]]), # k = 3

                         np.array([[2 , 1 , 1 ],
                                   [11, 12, 27]]), # k = 4

                         np.array([[1 , 2, 1 ],
                                   [30, 6, 21]]), # k = 5

                         np.array([[1 , 1 , 2 ],
                                   [11, 14, 20]]), # k = 6

                         np.array([[1, 1 , 1 ],
                                   [5, 14, 16]]), # k = 7

                         np.array([[2 , 2 , 2 ],
                                   [21, 31, 25]])  # k = 8
                         ]

# Y1_FAST_Cat: Y1 in PCM
Y1_FAST_Cat = [
               np.array([[0,  1, 1 , 1 , 1 , 1 , 1, 1 , 1  , 1  , 1 , 1 , 1  , 1  , 1 , 1 , 1 , 1  , 1 , 1 , 1 , 1 , 1  , 1,  1,  1,  1 , 1 , 1 , 1 , 1 , 1 , 1,  1,  1,  1 , 1 , 1 ],
                         [0, 91, 41, 75, 42, 81, 8, 78, 117, 118, 97, 64, 122, 100, 87, 69, 23, 113, 38, 88, 95, 35, 116, 7, 58, 49, 120, 53, 71, 32, 89, 52, 9, 72, 30, 125, 12, 55]]), # k = 1

               np.array([[0, 0, 1 , 1 , 1 , 1,  1, 1  , 1  , 1  , 1 , 1 , 1 ,  1, 1 , 1 , 1 , 1 , 1  , 1 , 1 , 1, 1 ,  1,  1,  1,  1, 1  , 1 , 1  , 1 , 1  , 1 , 1 , 1 , 1 , 1 , 1  ],
                         [0, 0, 82, 39, 76, 2, 84, 105, 124, 126, 54, 34, 14, 61, 77, 26, 99, 27, 114, 20, 13, 5, 59, 11, 48, 93, 22, 106, 43, 119, 33, 107, 85, 63, 80, 90, 67, 102]]), # k = 2
              ]

# Y2_FAST_Cat: Y2 in PCM
Y2_FAST_Cat = [
               np.array([[0, 2 ,  2, 1 ,  2, 1 , 1, 1, 1, 1 , 2 , 2 , 2 , 1, 1, 1 , 2 , 1 , 2 , 2 , 1 , 1 , 2 , 2 , 1, 2 , 2 , 1, 1, 2 , 1 , 2 , 1, 1 , 1 , 2 , 2 , 2 ],
                         [0, 20, 30, 16, 32, 11, 8, 3, 2, 15, 29, 18, 21, 6, 4, 14, 23, 17, 31, 28, 13, 12, 19, 26, 9, 22, 27, 5, 7, 25, 10, 24, 7, 17, 16, 32, 31, 29]]), # k = 1

               np.array([[0, 0, 2 , 2 , 2 , 1, 2 , 2 , 1, 2 , 2 , 2 , 1, 1 , 2 , 2 , 2 , 2 , 1, 2 , 1 , 1 , 1 , 1, 1, 2 , 1, 2 , 1, 2 , 2 , 1, 2 , 1 , 1 , 1 , 1 , 2 ],
                         [0, 0, 26, 27, 30, 5, 23, 27, 3, 26, 20, 23, 3, 13, 28, 19, 28, 18, 7, 26, 12, 14, 12, 6, 9, 23, 8, 20, 2, 18, 21, 8, 28, 16, 10, 13, 16, 25]]), # k = 2
              ]

# Y3_FAST_Cat: Y3 in PCM
Y3_FAST_Cat = [
               np.array([[0,  1 , 1  , 1  , 1 , 1 , 1,  1, 1 , 1 , 1 , 1 , 1  , 1  , 1 , 1 , 1, 1 , 1 , 1  , 1  , 1 , 1 , 1 , 1 , 1  , 1 , 1 , 1, 1 , 1, 1 , 0],
                         [0, 92 , 110, 115, 56, 74, 6, 45, 17, 62, 50, 31, 128, 101, 25, 16, 4, 15, 51, 109, 121, 18, 70, 98, 68, 111, 94, 66, 3, 47, 2, 49, 0]]), # k = 1

               np.array([[0, 1 , 1 , 1 , 1 , 1  , 1 , 1 , 1  , 1 , 1, 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1  , 1 , 1  , 1  , 1 , 1 , 1  , 1 , 1 , 1 , 1 , 0],
                         [0, 40, 65, 79, 37, 104, 28, 10, 127, 73, 1, 24, 47, 96, 21, 19, 44, 29, 57, 60, 86, 108, 46, 112, 103, 83, 36, 123, 89, 71, 19, 61, 0]]), # k = 2
              ]

# Y4_FAST_Cat: Y4 in PCM
Y4_FAST_Cat = [
               np.array([[0, 2  , 1 , 2 , 1, 1, 1 , 2 , 1, 2 , 1, 1, 1, 2 , 2 , 2 , 1 , 2 , 1 , 1, 2 , 1 , 2 , 2 , 1 , 1 , 1, 2 , 2 , 2 , 1 , 2 , 0],
                         [0, 21 , 16, 32, 4, 9, 14, 30, 6, 18, 5, 2, 8, 23, 19, 29, 17, 28, 15, 7, 25, 12, 24, 26, 11, 13, 3, 20, 31, 22, 10, 27, 0]]), # k = 1

               np.array([[0, 2 , 2 , 2 , 1 , 1, 1, 2 , 1, 2 , 2 , 1, 1, 2 , 2 , 1 , 1, 1 , 1, 2 , 2 , 2 , 1 , 1, 2 , 2 , 2 , 1, 2 , 2 , 1 , 1, 0],
                         [0, 24, 21, 30, 12, 6, 5, 32, 2, 18, 28, 9, 4, 27, 30, 17, 3, 12, 8, 21, 25, 20, 13, 3, 19, 32, 26, 8, 24, 22, 12, 3, 0]])  # k = 2
               ]

# Yd_C_Cat: Used to rearrange bits of X_R to find pseudoVal_string_C
Yd_C_Cat = [
            np.array([[1 , 2 , 2,  1,  2, 1,  1,  2],
                      [27, 19, 2, 19, 30, 9, 16, 15]]), # k = 1

            np.array([[2 , 1 , 1 , 1 , 2,  1,  2,  1 ],
                      [32, 32, 22, 21, 7, 31, 21, 10]]), # k = 2

            np.array([[1 , 2 , 1 , 2, 1,  1, 1,  1],
                      [12, 14, 2 , 3, 5, 26, 7, 18]]), # k = 3

            np.array([[1 , 1 , 1 , 1 , 2 , 2 , 2 , 1],
                      [20, 6 , 17, 30, 24, 27, 11, 3]]), # k = 4

            np.array([[2, 2 , 2 , 2 , 1 , 2 , 2 , 1 ],
                      [6, 10, 26, 29, 23, 25, 18, 29]]), # k = 5

            np.array([[1 , 2 , 2 , 1 , 2 , 1 , 1 , 1],
                      [13, 12, 5 , 24, 20, 15, 28, 8]]), # k = 6

            np.array([[1 , 2, 2, 2 , 2, 2 , 1, 1],
                      [11, 9, 8, 23, 4, 28, 4, 8]]), # k = 7

            np.array([[2 , 1 , 2 , 1 , 2 , 2 , 2 , 1 ],
                      [17, 25, 16, 14, 13, 22, 31, 12]])  # k = 8
            ]

# Yd_Cx_Cat: Used to rearrange bits of X_R to find pseudoVal_string_Cx
Yd_Cx_Cat = [
             np.array([[2 , 2 , 2 , 2, 1 , 1 , 2, 2 ],
                       [31, 22, 17, 9, 23, 25, 6, 10]]), # k = 1
             np.array([[1 , 2 , 2 , 2 , 2 , 2 , 2 , 1 ],
                       [15, 13, 19, 14, 29, 27, 27, 17]]), # k = 2
             np.array([[2 , 2 , 2, 2 , 1 , 1 , 2 , 1 ],
                       [10, 20, 2, 15, 11, 28, 13, 24]]), # k = 3
             np.array([[2, 1 , 1 , 2, 2 , 1 , 1 , 1 ],
                      [4, 19, 28, 7, 26, 11, 30, 12]]), # k = 4
             np.array([[2 , 1, 1 , 2 , 2, 1, 2 , 2],
                       [31, 9, 26, 11, 2, 5, 10, 3]]), # k = 5
             np.array([[2, 2 , 1, 1 , 2 , 2 , 1 , 2 ],
                       [6, 27, 7, 14, 23, 13, 26, 10]]), # k = 6
             np.array([[1 , 2 , 2, 2, 1 , 1 , 1 , 2 ],
                       [30, 20, 5, 7, 22, 27, 24, 12]]), # k = 7
             np.array([[2 , 2 , 1 , 2 , 2 , 1 , 1 , 2],
                       [16, 14, 27, 27, 22, 12, 12,  3]])  # k = 8
             ]


#===========================================================================================================
#                                       Paramsters for 8x8 images
#===========================================================================================================

# Yp_8x8_Cats: Used to rearrange bit of X_R to find X_new and Y_new
Yp_8x8_Cat = [
                  np.array([[2 , 2 , 2, 1 , 1 , 2],   # -> Size of one row equals to 2*log2(M)
                            [19, 30, 3, 22, 14, 6]]), # k = 1
                  
                  np.array([[2, 1 , 2 , 1 , 1, 2 ],
                            [4, 19, 23, 31, 5, 15]]) , # k = 2
                  
                  np.array([[2 , 1 , 2, 1, 2, 2 ],
                            [28, 27, 9, 4, 5, 20]]), # k = 3
                  
                  np.array([[2, 2 , 2 , 1 , 1 , 1 ],
                            [4, 11, 25, 32, 17, 10]]), # k = 4

                  np.array([[1 , 1 , 2, 2 , 1, 1, 2],
                            [21, 26, 2, 32, 6, 8, 8]]), # k = 5
                  
                  np.array([[1 , 1 , 1, 1 , 2 , 1 ],
                            [20, 23, 9, 18, 14, 28]]), # k = 6
                  
                  np.array([[2 , 1 , 2 , 2 , 1, 2 ],
                            [21, 25, 29, 10, 2, 16]]), # k = 7

                  np.array([[1 , 1 , 2 , 2 , 2 , 1 ],
                            [16, 15, 12, 7 , 18, 29]])  # k = 8
                  ]